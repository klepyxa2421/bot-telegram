/**
 * –¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º—É–∑–∏–∫–∏
 */

const TelegramBot = require('node-telegram-bot-api');
const fs = require('fs-extra');
const path = require('path');
const config = require('./config');
const downloader = require('./downloader');
const utils = require('./utils');
const stats = require('./stats');

// –ö–ª–∞—Å Bot –¥–ª—è —ñ–Ω–∫–∞–ø—Å—É–ª—è—Ü—ñ—ó —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ
class MusicBot {
  constructor(token) {
    // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–ª—ñ—î–Ω—Ç –±–æ—Ç–∞ –∑ –æ–ø—Ü—ñ—î—é polling
    this.bot = new TelegramBot(token, { polling: true });
    
    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é
    this.initTempDirectory();
    
    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥ —Ç–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    this.setupCommandHandlers();
    this.setupMessageHandlers();
    
    console.log('Telegram bot initialized');
  }
  
  /**
   * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î —Ç–∏–º—á–∞—Å–æ–≤—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é
   */
  async initTempDirectory() {
    try {
      if (!fs.existsSync(config.TEMP_DIR)) {
        await fs.mkdir(config.TEMP_DIR, { recursive: true });
        console.log(`Created temporary directory: ${config.TEMP_DIR}`);
      }
    } catch (error) {
      console.error('Error creating temporary directory:', error);
    }
  }
  
  /**
   * –í—Å—Ç–∞–Ω–æ–≤–ª—é—î –æ–±—Ä–æ–±–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
   */
  setupCommandHandlers() {
    // –ö–æ–º–∞–Ω–¥–∞ /start - –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è
    this.bot.onText(/\/start/, async (msg) => {
      const chatId = msg.chat.id;
      const firstName = msg.from.first_name;
      
      // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
      stats.updateUserSeen(msg.from.id.toString());
      
      const welcomeMessage = `
–ü—Ä–∏–≤—ñ—Ç, ${firstName}! üëã

–Ø @phasegym_bot - —Ç–≤—ñ–π –ø–æ–º—ñ—á–Ω–∏–∫ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º—É–∑–∏–∫–∏ –∑ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É! üéµ

–ü—Ä–æ—Å—Ç–æ –Ω–∞–¥—ñ—à–ª–∏ –º–µ–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ç—Ä–µ–∫ –∑ YouTube, SoundCloud –∞–±–æ Spotify, —ñ —è –≤—ñ–¥–ø—Ä–∞–≤–ª—é —Ç–æ–±—ñ –∞—É–¥—ñ–æ—Ñ–∞–π–ª.

–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó.
      `;
      
      await this.bot.sendMessage(chatId, welcomeMessage);
    });
    
    // –ö–æ–º–∞–Ω–¥–∞ /help - –¥–æ–≤—ñ–¥–∫–∞
    this.bot.onText(/\/help/, async (msg) => {
      const chatId = msg.chat.id;
      
      // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
      stats.updateUserSeen(msg.from.id.toString());
      
      const helpMessage = `
üìã *–î–æ–≤—ñ–¥–∫–∞ –ø–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—é –±–æ—Ç–∞ @phasegym_bot*

–¶–µ–π –±–æ—Ç –¥–æ–∑–≤–æ–ª—è—î –∑–∞–≤–∞–Ω—Ç–∞–∂—É–≤–∞—Ç–∏ –º—É–∑–∏–∫—É –∑ –ø–æ–ø—É–ª—è—Ä–Ω–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º.

*–ü—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω—ñ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∏:*
‚Ä¢ YouTube
‚Ä¢ SoundCloud
‚Ä¢ Spotify

*–Ø–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è:*
1. –°–∫–æ–ø—ñ—é–π—Ç–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ç—Ä–µ–∫ –∑ –æ–¥–Ω—ñ—î—ó –∑ –ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
2. –í—ñ–¥–ø—Ä–∞–≤—Ç–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –±–æ—Ç—É
3. –î–æ—á–µ–∫–∞–π—Ç–µ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –æ—Ç—Ä–∏–º–∞–π—Ç–µ –∞—É–¥—ñ–æ—Ñ–∞–π–ª

*–û–±–º–µ–∂–µ–Ω–Ω—è:*
‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å —Ç—Ä–µ–∫—É: ${config.MAX_DURATION_MINUTES} —Ö–≤–∏–ª–∏–Ω
‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä —Ñ–∞–π–ª—É: ${Math.floor(config.MAX_TELEGRAM_FILE_SIZE/1024/1024)} –ú–ë

*–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:*
/start - –ü–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É –∑ –±–æ—Ç–æ–º
/help - –û—Ç—Ä–∏–º–∞—Ç–∏ —Ü—é –¥–æ–≤—ñ–¥–∫—É
/about - –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –±–æ—Ç–∞
/stats - –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—å

*–ü–∏—Ç–∞–Ω–Ω—è —Ç–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó:* @username_—Ç—É—Ç

–ë–∞–∂–∞—î–º–æ –ø—Ä–∏—î–º–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è! üéµ
      `;
      
      await this.bot.sendMessage(chatId, helpMessage, { parse_mode: 'Markdown' });
    });
    
    // –ö–æ–º–∞–Ω–¥–∞ /about - —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –±–æ—Ç–∞
    this.bot.onText(/\/about/, async (msg) => {
      const chatId = msg.chat.id;
      
      // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
      stats.updateUserSeen(msg.from.id.toString());
      
      const aboutMessage = `
‚ÑπÔ∏è *–ü—Ä–æ –±–æ—Ç–∞ @phasegym_bot*

–í–µ—Ä—Å—ñ—è: 1.0.0

–¶–µ–π –±–æ—Ç —Ä–æ–∑—Ä–æ–±–ª–µ–Ω–æ –¥–ª—è –∑—Ä—É—á–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º—É–∑–∏–∫–∏ –∑ –ø–æ–ø—É–ª—è—Ä–Ω–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º.

*–§—É–Ω–∫—Ü—ñ—ó:*
‚Ä¢ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞—É–¥—ñ–æ –∑ YouTube
‚Ä¢ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç—Ä–µ–∫—ñ–≤ –∑ SoundCloud
‚Ä¢ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º—É–∑–∏–∫–∏ –∑—ñ Spotify

*–¢–µ—Ö–Ω—ñ—á–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è:*
–ë–æ—Ç —Ä–æ–∑—Ä–æ–±–ª–µ–Ω–æ –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º Node.js —Ç–∞ Telegram Bot API.

*–†–æ–∑—Ä–æ–±–Ω–∏–∫:*
@username_—Ç—É—Ç

–î—è–∫—É—î–º–æ –∑–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –Ω–∞—à–æ–≥–æ –±–æ—Ç–∞! üéµ
      `;
      
      await this.bot.sendMessage(chatId, aboutMessage, { parse_mode: 'Markdown' });
    });
    
    // –ö–æ–º–∞–Ω–¥–∞ /stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—å
    this.bot.onText(/\/stats/, async (msg) => {
      const chatId = msg.chat.id;
      const userId = msg.from.id.toString();
      
      // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
      stats.updateUserSeen(userId);
      
      // –û—Ç—Ä–∏–º—É—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
      const userStats = stats.getUserStats(userId);
      
      // –û—Ç—Ä–∏–º—É—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
      const globalStats = stats.getGlobalStats();
      
      let statsMessage = `
üìä *–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—å:*

–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—å: ${userStats.downloads}

`;

      // –î–æ–¥–∞—î–º–æ –ø–æ–ø—É–ª—è—Ä–Ω—ñ —Ç—Ä–µ–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫—â–æ —î
      if (userStats.popular_tracks.length > 0) {
        statsMessage += `*–ù–∞–π—á–∞—Å—Ç—ñ—à–µ –≤–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂—É–≤–∞–ª–∏:*\n`;
        userStats.popular_tracks.forEach((track, index) => {
          statsMessage += `${index + 1}. ${track.artist} - ${track.title} (${track.count} —Ä–∞–∑—ñ–≤)\n`;
        });
        statsMessage += '\n';
      }
      
      // –î–æ–¥–∞—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
      statsMessage += `
*–ì–ª–æ–±–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*
–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—å: ${globalStats.total_downloads}
–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: ${globalStats.user_count}

*–ü–æ–ø—É–ª—è—Ä–Ω—ñ —Ç—Ä–µ–∫–∏:*
`;
      
      // –î–æ–¥–∞—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–æ –ø–æ–ø—É–ª—è—Ä–Ω—ñ —Ç—Ä–µ–∫–∏
      if (globalStats.popular_tracks.length > 0) {
        globalStats.popular_tracks.forEach((track, index) => {
          statsMessage += `${index + 1}. ${track.artist} - ${track.title} (${track.count} —Ä–∞–∑—ñ–≤)\n`;
        });
      } else {
        statsMessage += '–ü–æ–∫–∏ –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö\n';
      }
      
      await this.bot.sendMessage(chatId, statsMessage, { parse_mode: 'Markdown' });
    });
  }
  
  /**
   * –í—Å—Ç–∞–Ω–æ–≤–ª—é—î –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –±–æ—Ç–∞
   */
  setupMessageHandlers() {
    // –û–±—Ä–æ–±–Ω–∏–∫ URL –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    this.bot.on('message', async (msg) => {
      // –Ø–∫—â–æ —Ü–µ –∫–æ–º–∞–Ω–¥–∞ - —ñ–≥–Ω–æ—Ä—É—î–º–æ
      if (msg.text && msg.text.startsWith('/')) {
        return;
      }
      
      // –Ø–∫—â–æ —Ü–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è
      if (msg.text) {
        const text = msg.text.trim();
        const chatId = msg.chat.id;
        
        // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        stats.updateUserSeen(msg.from.id.toString());
        
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Ü–µ –≤–∞–ª—ñ–¥–Ω–∏–π URL
        if (downloader.isValidUrl(text)) {
          // –í–∏–∑–Ω–∞—á–∞—î–º–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
          const platform = downloader.detectPlatform(text);
          
          if (!platform) {
            await this.bot.sendMessage(chatId, config.ERROR_MESSAGES.UNSUPPORTED_PLATFORM);
            return;
          }
          
          // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ—á–∞—Ç–æ–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
          const loadingMessage = await this.bot.sendMessage(
            chatId, 
            `üîÑ –û—Ç—Ä–∏–º—É—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ç—Ä–µ–∫...\n\n–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${platform}`
          );
          
          try {
            // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ç—Ä–µ–∫ –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∏
            let downloadInfo;
            
            if (platform === 'youtube') {
              await this.bot.editMessageText(
                'üîÑ –ó–∞–≤–∞–Ω—Ç–∞–∂—É—é —Ç—Ä–µ–∫ –∑ YouTube... –¶–µ –º–æ–∂–µ –∑–∞–π–Ω—è—Ç–∏ –¥–µ—è–∫–∏–π —á–∞—Å.', 
                { chat_id: chatId, message_id: loadingMessage.message_id }
              );
              downloadInfo = await downloader.downloadFromYoutube(text);
            } else if (platform === 'soundcloud') {
              await this.bot.editMessageText(
                'üîÑ –ó–∞–≤–∞–Ω—Ç–∞–∂—É—é —Ç—Ä–µ–∫ –∑ SoundCloud... –¶–µ –º–æ–∂–µ –∑–∞–π–Ω—è—Ç–∏ –¥–µ—è–∫–∏–π —á–∞—Å.', 
                { chat_id: chatId, message_id: loadingMessage.message_id }
              );
              downloadInfo = await downloader.downloadFromSoundcloud(text);
            } else if (platform === 'spotify') {
              await this.bot.editMessageText(
                'üîÑ –ó–Ω–∞—Ö–æ–¥–∂—É —Ç—Ä–µ–∫ –∑—ñ Spotify... –¶–µ –º–æ–∂–µ –∑–∞–π–Ω—è—Ç–∏ –¥–µ—è–∫–∏–π —á–∞—Å.', 
                { chat_id: chatId, message_id: loadingMessage.message_id }
              );
              downloadInfo = await downloader.downloadFromSpotify(text);
            }
            
            // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—à–Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            await this.bot.editMessageText(
              `‚úÖ –¢—Ä–µ–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ! –í—ñ–¥–ø—Ä–∞–≤–ª—è—é —Ñ–∞–π–ª...\n\n–ù–∞–∑–≤–∞: ${downloadInfo.title}\n–í–∏–∫–æ–Ω–∞–≤–µ—Ü—å: ${downloadInfo.artist}\n–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å: ${downloadInfo.duration}\n–†–æ–∑–º—ñ—Ä: ${utils.formatFileSize(downloadInfo.fileSize)}`, 
              { chat_id: chatId, message_id: loadingMessage.message_id }
            );
            
            // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∞—É–¥—ñ–æ—Ñ–∞–π–ª
            await this.bot.sendAudio(chatId, downloadInfo.filePath, {
              caption: `üéµ ${downloadInfo.artist} - ${downloadInfo.title}\n\n–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —á–µ—Ä–µ–∑ @phasegym_bot`,
              performer: downloadInfo.artist,
              title: downloadInfo.title
            });
            
            // –ó–∞–ø–∏—Å—É—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            stats.recordDownload(
              msg.from.id.toString(),
              downloadInfo.title,
              downloadInfo.artist,
              downloadInfo.platform
            );
            
            // –í–∏–¥–∞–ª—è—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª
            await utils.cleanupTempFiles(downloadInfo.filePath);
            
          } catch (error) {
            console.error('Error downloading:', error);
            
            // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            if (error.message === 'TOO_LONG') {
              await this.bot.editMessageText(
                config.ERROR_MESSAGES.TOO_LONG, 
                { chat_id: chatId, message_id: loadingMessage.message_id }
              );
            } else if (error.message === 'TOO_LARGE') {
              await this.bot.editMessageText(
                config.ERROR_MESSAGES.TOO_LARGE, 
                { chat_id: chatId, message_id: loadingMessage.message_id }
              );
            } else if (error.message === 'SPOTIFY_UNAVAILABLE') {
              await this.bot.editMessageText(
                config.ERROR_MESSAGES.SPOTIFY_UNAVAILABLE, 
                { chat_id: chatId, message_id: loadingMessage.message_id }
              );
            } else {
              await this.bot.editMessageText(
                config.ERROR_MESSAGES.DOWNLOAD_FAILED, 
                { chat_id: chatId, message_id: loadingMessage.message_id }
              );
            }
          }
        } else {
          // –Ø–∫—â–æ —Ü–µ –Ω–µ URL - —ñ–≥–Ω–æ—Ä—É—î–º–æ –∞–±–æ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø—ñ–¥–∫–∞–∑–∫—É
          if (text.includes('http') || text.includes('www')) {
            await this.bot.sendMessage(chatId, config.ERROR_MESSAGES.INVALID_URL);
          }
        }
      }
    });
    
    // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
    this.bot.on('polling_error', (error) => {
      console.error('Polling error:', error);
    });
  }
  
  /**
   * –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
   */
  start() {
    console.log('Bot started. Running forever...');
  }
}

/**
 * –°—Ç–≤–æ—Ä—é—î —ñ –∑–∞–ø—É—Å–∫–∞—î –±–æ—Ç–∞
 * @returns {MusicBot} –ï–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
 */
function setupBot() {
  if (!config.TELEGRAM_TOKEN) {
    throw new Error('TELEGRAM_TOKEN –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞.');
  }
  
  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ç–∏–º—á–∞—Å–æ–≤–æ—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó
  if (!fs.existsSync(config.TEMP_DIR)) {
    fs.mkdirSync(config.TEMP_DIR, { recursive: true });
  }
  
  // –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞ –∑–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
  const bot = new MusicBot(config.TELEGRAM_TOKEN);
  bot.start();
  
  return bot;
}

module.exports = {
  setupBot
};